swagger: '2.0'
info:
  version: "1"
  title: DB Fahrplan API
  description: Deutsche Bahn Fahrplan API
  termsOfService: 'http://data.deutschebahn.com/apis/fahrplan/'
  contact:
    name: DB Open Data
    email: DBOpenData@deutschebahn.com
schemes:
  - https
host: open-api.bahn.de
basePath: /bin/rest.exe
consumes:
  - application/x-www-form-urlencoded
  - application/json
securityDefinitions:
  authKey:
    type: apiKey
    in: query
    name: authKey
paths:

  /location.name:
    get:
      description: The location.name service can be used to perform a pattern matching of a user input and to retrieve a list of possible matches in the journey planner database. Possible matches might be stops/stations, points of interest and addresses.
      security:
        -
          authKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: format
          description: The interface returns responses either in XML (default) or JSON format.
          in: query
          required: true
          type: string
          enum:
            - json
        -
          name: lang
          description: The REST API supports multiple languages. The default language is English and it is used if no language parameter is delivered. The language code has to be lower case. The supported languages depend on the plan data of the underlying system. The chosen language only influences the returned Notes in the REST responses.
          in: query
          required: false
          type: string
          default: en
          enum:
            - en
            - de
            - fr
            - da
            - pl
            - it
            - es
            - nl
        -
          name: input
          description: This parameter contains a string with the user input.
          in: query
          required: true
          type: string
      responses:
        200:
          description: The result is a list of possible matches (locations) where the user might pick one entry to perform a trip request with this location as origin or destination or to ask for a departure board or arrival board of this location (stops/stations only).
          schema: 
            $ref: '#/definitions/LocationResponse'

  /departureBoard:
    get:
      description: Retrieves the station board for the given station. This method will return the next 20 departures (or less if not existing) from a given point in time. The service can only be called for stops/stations by using according ID retrieved by the location.name method.
      security:
        -
          authKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: format
          description: The interface returns responses either in XML (default) or JSON format.
          in: query
          required: true
          type: string
          enum:
            - json
        -
          name: lang
          description: The REST API supports multiple languages. The default language is English and it is used if no language parameter is delivered. The language code has to be lower case. The supported languages depend on the plan data of the underlying system. The chosen language only influences the returned Notes in the REST responses.
          in: query
          required: false
          type: string
          default: en
          enum:
            - en
            - de
            - fr
            - da
            - pl
            - it
            - es
            - nl
        -
          name: id
          description: Id of the stop/station. The service can only be called for stops/stations by using according id retrieved by the location method.
          in: query
          required: true
          type: string
        -
          name: date
          description: The date of departures.
          in: query
          required: true
          type: string
        -
          name: time
          description: The time of departures.
          in: query
          required: true
          type: string
      responses:
        200:
          description: The next 20 departures (or less if not existing) from a given point in time.
          schema: 
            $ref: '#/definitions/DepartureBoardResponse'      

  /arrivalBoard:
    get:
      description: Retrieves the station board for the given station. This method will return the next 20 arrivals (or less if not existing) from a given point in time. The service can only be called for stops/stations by using according ID retrieved by the location.name method.
      security:
        -
          authKey: []
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: format
          description: The interface returns responses either in XML (default) or JSON format.
          in: query
          required: true
          type: string
          enum:
            - json
        -
          name: lang
          description: The REST API supports multiple languages. The default language is English and it is used if no language parameter is delivered. The language code has to be lower case. The supported languages depend on the plan data of the underlying system. The chosen language only influences the returned Notes in the REST responses.
          in: query
          required: false
          type: string
          default: en
          enum:
            - en
            - de
            - fr
            - da
            - pl
            - it
            - es
            - nl
        -
          name: id
          description: Id of the stop/station. The service can only be called for stops/stations by using according id retrieved by the location method.
          in: query
          required: true
          type: string
        -
          name: date
          description: The date of arrivals.
          in: query
          required: true
          type: string
        -
          name: time
          description: The time of arrivals.
          in: query
          required: true
          type: string
      responses:
        200:
          description: The next 20 arrivals (or less if not existing) from a given point in time.
          schema: 
            $ref: '#/definitions/ArrivalBoardResponse'      

  /journeyDetail:
    get:
      description: Delivers information about the complete route of a vehicle. This service can't be called directly but only by reference URLs in a result of a departureBoard request. It contains a list of all stops/stations of this journey including all departure and arrival times (with realtime data if available / not supported right now) and additional information like specific attributes about facilities and other texts.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        -
          name: format
          description: The interface returns responses either in XML (default) or JSON format.
          in: query
          required: true
          type: string
          enum:
            - json
        -
          name: lang
          description: The REST API supports multiple languages. The default language is English and it is used if no language parameter is delivered. The language code has to be lower case. The supported languages depend on the plan data of the underlying system. The chosen language only influences the returned Notes in the REST responses.
          in: query
          required: false
          type: string
          default: en
          enum:
            - en
            - de
            - fr
            - da
            - pl
            - it
            - es
            - nl
        -
          name: ref
          description: Reference identifier.
          in: query
          required: true
          type: string
      responses:
        200:
          description: List of all stops/stations of this journey including all departure and arrival times (with realtime data if available / not supported right now) and additional information like specific attributes about facilities and other texts.
          schema: 
            $ref: '#/definitions/JourneyDetailResponse'      
definitions:
  LocationResponse:
    type: object
    required:
      - LocationList
    properties:
      LocationList:
        $ref: '#/definitions/LocationList'
  LocationList:
    type: object
    required:
      - StopLocation
    properties:
      StopLocation:
        type: array
        items:
          $ref: '#/definitions/StopLocation'
  StopLocation:
    type: object
    required:
      - name
      - lon
      - lat
      - id
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      lon:
        type: number
        format: double
      lat:
        type: number
        format: double
  DepartureBoardResponse:
    type: object
    required:
      - DepartureBoard
    properties:
      DepartureBoard:
        $ref: '#/definitions/DepartureBoard'
  DepartureBoard:
    type: object
    required:
      - Departure
    properties:
      Departure:
        type: array
        items:
          $ref: '#/definitions/DepartureOrArrival'
  ArrivalBoardResponse:
    type: object
    required:
      - DepartureBoard
    properties:
      DepartureBoard:
        $ref: '#/definitions/ArrivalBoard'
  ArrivalBoard:
    type: object
    required:
      - Arrival
    properties:
      Arrival:
        type: array
        items:
          $ref: '#/definitions/DepartureOrArrival'
  DepartureOrArrival:
    type: object
    required:
      - name
      - type
      - stopid
      - stop
      - time
      - date
      - direction
      - track
      - JourneyDetailRef
    properties:
      name:
        type: string
      type:
        type: string
      stopid:
        type: integer
        format: int32
      stop:
        type: string
      time:
        $ref: '#/definitions/LocalTime'
      date:
        $ref: '#/definitions/LocalDate'
      direction:
        type: string
      track:
        type: string
      JourneyDetailRef:
        $ref: '#/definitions/JourneyDetailRef'
  JourneyDetailRef:
    type: object
    required:
      - ref
    properties:
      ref:
        type: string
  JourneyDetailResponse:
    type: object
    required:
      - JourneyDetail
    properties:
      JourneyDetail:
        $ref: '#/definitions/JourneyDetail'
  JourneyDetail:
    type: object
    required:
      - Stops
      - Names
      - Types
      - Operators
      - Notes
    properties:
      Stops:
        $ref: '#/definitions/Stops'
      Names:
        $ref: '#/definitions/Names'
      Types:
        $ref: '#/definitions/Types'
      Operators:
        $ref: '#/definitions/Operators'
      Notes:
        $ref: '#/definitions/Notes'
  Stops:
    type: object
    required:
      - Stop
    properties:
      Stop:
        type: array
        items:
          $ref: '#/definitions/Stop'
  Stop:
    type: object
    required:
      - id
      - name
      - lon
      - lat
      - routeIdx
      - depTime
      - depDate
      - track
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      lon:
        type: number
        format: double
      lat:
        type: number
        format: double
      routeIdx:
        type: integer
        format: int32
      depTime:
        $ref: '#/definitions/LocalTime'
      depDate:
        $ref: '#/definitions/LocalDate'
      track:
        type: string
  Names:
    type: object
    required:
      - Name
    properties:
      Name:
        type: array
        items:
          $ref: '#/definitions/Name'
  Name:
    type: object
    required:
      - name
      - routeIdxFrom
      - routeIdxTo
    properties:
      name:
        type: string
      routeIdxFrom:
        type: integer
        format: int32
      routeIdxTo:
        type: integer
        format: int32
  Types:
    type: object
    required:
      - Type
    properties:
      Type:
        type: array
        items:
          $ref: '#/definitions/Type'
  Type:
    type: object
    required:
      - type
      - routeIdxFrom
      - routeIdxTo
    properties:
      type:
        type: string
      routeIdxFrom:
        type: integer
        format: int32
      routeIdxTo:
        type: integer
        format: int32
  Operators:
    type: object
    required:
      - Operator
    properties:
      Operator:
        type: array
        items:
          $ref: '#/definitions/Operator'
  Operator:
    type: object
    required:
      - name
      - routeIdxFrom
      - routeIdxTo
    properties:
      name:
        type: string
      routeIdxFrom:
        type: integer
        format: int32
      routeIdxTo:
        type: integer
        format: int32
  Notes:
    type: object
    required:
      - Note
    properties:
      Note:
        type: array
        items:
          $ref: '#/definitions/Note'
  Note:
    type: object
    required:
      - key
      - priority
      - routeIdxFrom
      - routeIdxTo
      - $
    properties:
      key:
        type: string
      priority:
        type: integer
        format: int32
      routeIdxFrom:
        type: integer
        format: int32
      routeIdxTo:
        type: integer
        format: int32
      $:
        type: string
  LocalTime:
    type: string
  LocalDate:
    type: string
